<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
	<head>
		<meta http-equiv="Content-type" content="text/html;charset=UTF-8">
		<title>TSDSFE GUI</title>

		<link rel="stylesheet" type="text/css" href="css/gui.css">
       	<link rel="stylesheet" href="css/jquery-ui-1.9.2.css">

  		<script type="text/javascript" src="js/deps/jquery-1.8.3.min.js"></script>
  		<script type="text/javascript" src="js/deps/jquery-ui-1.9.2.js"></script>
		<script type="text/javascript" src="js/deps/jquery-simulate-0.0.1.js"></script>
		<script type="text/javascript" src="js/deps/date.js"></script>
		<!-- http://benalman.com/projects/jquery-url-utils-plugin/ -->
		<script type="text/javascript" src="js/deps/jquery.query-2.1.3.js"></script>
		<script type="text/javascript" src="js/deps/jquery.ba-hashchange-1.3.js"></script>
		<script type="text/javascript" src="js/jquery.scrollTo-min.js"></script>
		<script type="text/javascript" src="http://tsds.org/et/lib/expandtemplate.js"></script>
		<!-- script type="text/javascript" src="../tsdset/lib/expandtemplate.js"></script -->
		<script type="text/javascript" src="js/dropdown2.js"></script>
		<script>
			//TSDSFE = "http://tsds.org/get2/";
			TSDSFE = location.href.split("#")[0];
			AUTOPLOT = "http://autoplot.org/plot/dev/SimpleServlet"
			function tsdsfeajax(i,url) {
				url = TSDSFE + url;
				$('#status').show();
				if (typeof(tsdsfeajax.cache) === "undefined") {
					tsdsfeajax.cache = {};
				}
				if (tsdsfeajax.cache[url]) {
					console.log("tsdsfeajax: Cache hit");
					return $.parseJSON(tsdsfeajax.cache[url]);
				}
				$('#status').html("Requesting " + url);
				console.log("Requesting " + url);

				$.ajax({
					type: "GET",
					url: url,
					async: false,
					dataType: "text",
					success: function (data,textStatus, jqXHR) {
						console.log("Loaded data for "+i);
						//$('#status'+i).hide();
						$('#ready'+i).show();
						//console.log("data="+data);
						if (!data.match(/^\s*\[/)) {
							console.log("here")
							xret = data.replace(/,$/,"").replace(/\n/,'').split(",");
						} else {
							xret = data;
						}
						$('#status').html("Received <a target='_blank' href='" + url + "'>"+url.replace("&para","&#38;para")+"</a>");
						setTimeout(function () {$('#status').html("")}, 3000);
					},
					error: function (xhr, textStatus, errorThrown) {
						$('#status'+i).text('x');
					}
				});
				tsdsfeajax.cache[url] = xret;
				return $.parseJSON(xret);				
			}
			
			function getdas(attr) {
				
				turl = "?catalog="+selected('catalog')+"&dataset="+selected('dataset')+"&parameters="+selected('parameters')+"&return=dd";
				console.log("getdas: requesting " + turl);
				
				$.ajax({
					type: "GET",
					url: turl,
					async: false,
					dataType: "text",
					success: function (data,textStatus, jqXHR) {
						ret = data;
					},
					error: function (xhr, textStatus, errorThrown) {
						$('#status').text('Failed to get attribute information.');
					}
				});
				try {
					eval("ret = " + ret);
				} catch (err) {
					console.log("Something went wrong with metadata request.");
					ret = "";
				}
				return ret;				
			}
						
			function selected(name) {
				console.log("selected: " + name);
				if (location.hash !== "") {
					var qs = $.parseQueryString();
					//console.log(location.hash);
					//console.log("using hash value for " + name + "=" + qs[name]);
					if (qs[name]) return qs[name];
				}
					
				return $("span[name='"+name+"']").attr('value');
			}

			function hidedivs() {
				$('#datasetinfo').html("");$('#parameterinfo').html("");$('#outputinfo').hide();$('#datadiv').hide();$('#previewimgdiv').hide();$('#overviewdiv').hide();
			}
			
			function catalogs(i) {
				catalogs.onselect = function () {
					console.log("catalogs.onselect called");
					//$('#status').text('Retrieving dataset list');
					info = tsdsfeajax(i,"?catalog="+selected('catalog'));
					catalog.info = info;
					$('#cataloginfo').html("<b>Catalog information:</b>");					

					$('#cataloginfo').append('<ul style="list-style-position: outside;">');					
					if (info.length > 0) {
						for (j = 0;j < info.length;j++) {
							console.log("Info: " + info[j].title);
							if (!(info[j].title === "") && !(info[j].link === "")) {
								$('#cataloginfo ul').append('<li style=""><a href="'+info[j].link+'">'+info[j].title+'</a></li>');
							} else if ((info[j].title === "") && !(info[j].link === "")) {
								$('#catalogtinfo ul').append('<li style=""><a href="'+info[j].link+'">'+info[j].link+'</a></li>');
							} 
						}
					} else {
						$('#cataloginfo ul').append('<li style="">Catalog <b>' + selected("catalog") + '</b> was not found in <a href="' + TSDSFE + '?catalogs=^.*">catalog list</a></li>');
					}
					$('#catalogtinfo ul').append('</ul>');

					//window.location.hash="catalog="+selected('catalog');
					//updatehash(i,"catalog");	

					$('#cataloginfo').show();
					hidedivs();
				};

				return tsdsfeajax(i,"?catalog=^.*");
			}
			
			function datasets(i) {
				datasets.onselect = function () {
					info = tsdsfeajax(i,"?catalog="+selected('catalog')+"&dataset="+selected('dataset'));
					$('#datasetinfo').html("<b>Dataset documentation:</b>")
					$('#datasetinfo').show();					
					$('#datasetinfo').append('<ul style="list-style-position: outside;">');
					if (info.length > 0) {
						for (j = 0;j < info.length;j++) {
							if (!(info[j].title === "") && !(info[j].link === "")) {
								$('#datasetinfo ul').append('<li style=""><a href="'+info[j].link+'">'+info[j].title+'</a></li>');
							} else if ((info[j].title === "") && !(info[j].link === "")) {
								$('#datasetinfo ul').append('<li style=""><a href="'+info[j].link+'">'+info[j].link+'</a></li>');
							}
						}
					} else {
						if (catalog.info.length > 0) { 
							$('#datasetinfo ul').append('<li style="">Dataset <b>' + selected("dataset") + '</b> was not found in <a href="' + TSDSFE + '?catalog='+selected('catalog')+'&dataset=^.*">catalog list</a></li>');
						} else {
							$('#datasetinfo').hide();
						}
					}
					$('#datasetinfo ul').append('</ul>');
					$('#parameterinfo').html("");$('#outputinfo').hide();$('#datadiv').hide();$('#previewimgdiv').hide();$('#overviewdiv').hide();
					
					//updatehash(i,"dataset");	
				};

				var list = null;
				delete list;
				console.log("List before")
				list = tsdsfeajax(i,"?catalog="+selected('catalog')+"&dataset=^.*");
				
				for (var k = 0; k < list.length; k++) {
					if (list[k].label === "") {
						list[k].label = list[k].name;
					}
					if (list[k].label.length > 60) {
						list[k].label = list[k].value + ": " + list[k].label.substring(0,60) + " ...";
					} else if (list[k].label === "") {
						list[k].label = list[k].value  + ": (no label or name in catalog)";						
					} else {
						list[k].label = list[k].value + ": " + list[k].label;
					}
				}
				function compare(a,b) {
					  if (a.value < b.value) return -1;
					  if (a.value > b.value) return 1;
					  return 0;
				}

				list.sort(compare);
				return list
			}
			
			function starttime(i) {
				starttime.onselect = function () {
					$('#datadiv').hide();	$('#outputinfo').hide();
				};

				info = tsdsfeajax(i,"?catalog="+selected('catalog')+"&dataset="+selected('dataset')+"&parameters="+selected('parameters'));
				var list = [];
				list[0] = {};

				if (info[0].dd.cadence.match(/T/)) {
					if (info[0].dd.cadence.match(/H/)) {
						list[0].label = "-P30D";
						list[0].value = "-P30D";
					} else if (info[0].dd.cadence.match(/M/)) {
						list[0].label = "-P3D";
						list[0].value = "-P3D";
					} else {
						list[0].label = "-P1D";
						list[0].value = "-P1D";
					}
				}
				if (!info[0].dd.cadence.match(/T/)) {
					if (info[0].dd.cadence.match(/Y|M/)) {
						list[0].label = info[0].dd.start;
						list[0].value = info[0].dd.start;
					} else {
						list[0].label = "-P1Y";
						list[0].value = "-P1Y";
					}
				}
				if (info[0].dd.cadence.match(/PT[0-9]D|PT[0-9]Y/)) {
					// Case where T was not supposed to be there.
					if (info[0].dd.cadence.match(/Y/)) {
						list[0].label = info[0].dd.start;
						list[0].value = info[0].dd.start;
					} else {
						list[0].label = "-P1Y";
						list[0].value = "-P1Y";
					}
					
				}

				
				if (!list[0].label) {
					// Make call to determine cadence.
				}
				
				//list[0].label = info[0].dd.start;
				//list[0].value = info[0].dd.start;

				return list;
			}
			
			function stoptime(i) {
				stoptime.onselect = function () {
					preview();
					$('#datadiv').hide();	$('#outputinfo').hide();				
				}

				// No need to do this again ...
				info = tsdsfeajax(i,"?catalog="+selected('catalog')+"&dataset="+selected('dataset')+"&parameters="+selected('parameters'));
				var list = [];
				list[0] = {};

				console.log(selected('start'))


				var start = info[0].dd.start.replace(/\n/g,"").substring(0,10);
				var stop = info[0].dd.stop.replace(/\n/g,"").substring(0,10);
				if (info[0].dd.stop.match("P")) {
					var timeRange  = expandISO8601Duration(start+"/"+stop);
					var stop = timeRange.split("/")[1].substring(0,10)
				} else {
				}
				
				list[0].label = stop;
				list[0].value = stop;
				
				return list;
			}
			
			function parameters(i) {
				//parameters.onselect = dorequest;
				parameters.onselect = function () {
					console.log('parameters selected');
					console.log(parameters.list);
					// http://stackoverflow.com/questions/5579678/jquery-how-to-find-an-object-by-attribute-in-an-array

					$('#datadiv').hide();					
					var das = getdas();


					$('#parameterinfo').html("<b>Parameter information:</b>")
					$('#parameterinfo').show();					
					$('#parameterinfo').append('<ul style="list-style-position: outside;">');

					if (das.length > 0) {
						var range = das[0].dd.start + " through " + das[0].dd.stop;
						var fills  = das[0].dd.fillvalue;
						var units  = das[0].dd.units;
						var labels = das[0].dd.label;	
						$('#parameterinfo ul').append('<li style="">Labels: '+labels+'</li>');
						$('#parameterinfo ul').append('<li style="">Units: ' +units+'</li>');
						$('#parameterinfo ul').append('<li style="">Fills: ' +fills+'</li>');
						$('#parameterinfo ul').append('<li style="">Availability: ' +range+'</li>');
						$('#parameterinfo ul').append('<li style="">Cadence: ' +das[0].dd.cadence+'</li>');
					} else {
						$('#parameterinfo ul').append('<li style="">Parameter <b>' + selected("parameters") + '</b> was not found in <a href="' + TSDSFE + '?catalog='+selected('catalog')+'&dataset='+selected('dataset')+'&parameters=^.*">dataset list</a></li>');
						
					}
					$('#parameterinfo').append('</ul>');				
					//updatehash(i,"parameters");
				};

				parameters.list = tsdsfeajax(i,"?catalog="+selected('catalog')+"&dataset="+selected('dataset')+"&parameters=^.*");
				var list = parameters.list;
				for (var k = 0; k < list.length; k++) {
					if (list[k].label.length > 60) {
						list[k].label = list[k].value + ": " + list[k].label.substring(0,60) + " ...";
					} else if (list[k].label === "") {
						list[k].label = list[k].value;						
					} else {
						list[k].label = list[k].value + ": " + list[k].label;
					}
				}
				
				return list;
			}
			
			function outformat(i) {
				outformat.onselect = function () {
					dorequest();
					//updatehash(i,"output");
				}
				values = [{label:"Data (native)", value:"0"},{label:"Data (iso)",value:"1"},{label:"Data (yyyy mm dd hh mm ss)",value:"2"},{label:"PNG",value:"png"},{label:"PDF",value:"pdf"},{label:"SVG",value:"svg"},{label:"IDL (script)",value:"idl"},{label:"MATLAB (script)",value:"matlab"},{label:"Debug",value:"debug"}];
				return values;
			}
			
			function preview() {
				$('#outputinfo').show();
				$('#dldiv').hide();
				//location.hash = location.hash.replace("&outformat=0","");
				if (!$("#usecache").is(":checked") && !location.hash.match("usecache=false")) {
					//location.hash = location.hash + "&usecache=false";
				}  
				
				if (!$("#previewimgcheckbox").is(":checked") && !location.hash.match("preview=false")) {
					//location.hash = location.hash + "&preview=false";
				} else {
					show1pdplots();
				}  
				
			}

			function triggerselect() {
				// Set inital values of drop-downs based on hash.
					qs = $.parseQueryString();
					console.log("Initial query string: " + JSON.stringify(qs));		
					for (var id in qs) {
						console.log("Triggering select for drop-down with id = "+id);
						$("#"+id).val(qs[id]).data("autocomplete")._trigger("select",event,{item:qs[id]});
					}
			}				
			
			function tests(i) {
				var list = new Array();
				list[0] = {label:"SSCWeb",value:"sscweb",url:"catalog=sscweb&dataset=ace&parameters=X_GEI,Y_GEI,Z_GEI&start=1997-08-26&stop=1997-09-05"};
				list[1] = {label:"CDAWeb",value:"cdaweb",url:"catalog=cdaweb&dataset=A1_K0_MPA&parameters=dens_lop&start=2001-08-31&stop=2001-09-10"};
				list[2] = {label:"SuperMAG",value:"supermag",url:"catalog=supermag&dataset=BLC&parameters=N&start=-PT3D&stop=1980-01-10"};
				list[3] = {label:"SPIDR",value:"spidr",url:"catalog=spidr&dataset=amie_ae&parameters=amie_ae&version=0&start=1991-01-01&stop=1991-01-11"};
				list[4] = {label:"USGS 1-minute",value:"usgs1m",url:"catalog=USGS/RT/PT1M&dataset=BRW&parameters=H&start=2013-05-02&stop=2013-05-05"};
				list[5] = {label:"USGS 1-second",value:"usgs1s",url:"catalog=USGS/RT/PT1S&dataset=BRW&parameters=H&start=2013-05-02&stop=2013-05-05"};
				list[6] = {label:"SWPC AK/2DayFile",value:"SWPC AK/2DayFile",url:"catalog=SWPC/AK/2DayFile&dataset=AK&parameters=BoulderK&start=-PT2D&stop=PT0D&outformat=0"};
				list[7] = {label:"SWPC AK",value:"SWPC AK",url:"catalog=SWPC/AK&dataset=AK&parameters=BoulderK&start=-PT5D&stop=-PT2D&outformat=0"};
				list[8] = {label:"Linkcheck",value:"Linkcheck",url:"catalog=Autoplot/Linkcheck&dataset=1&parameters=ResponseTime&start=2012-12-07&stop=2012-12-09"};

				//list[6] = {label:"ISIS-2",value:"ISIS-2",url:"catalog=NSSDC/ISIS-2&dataset=CEP&parameters=L_value&start=1971-04-14&stop=1971-04-16"};
				//list[7] = {label:"TSX-5",value:"TSX-5",url:"catalog=ViRBO/TSX-5/EPHX&dataset=ephx&parameters=PitchAngle&start=2000-08-15&stop=2000-08-17"};
				//				list[5] = {label:"ISIS-1",value:"ISIS-1",url:"catalog=NSSDC/ISIS-1&dataset=CEP&start=1969-01-30&stop=1969-02-19&parameters=Altitude"};

				
				tests.onselect = function () {
					console.log('test selected');
					vid = $("#dropdownstest0").attr('value');
					console.log(vid);
					var k = 0;
					while (true) {
						if (list[k].value === vid) {break} else {k = k+1}
					}
					location.hash = list[k].url;
					preview();
					$('#outputinfo').hide();

					triggerselect();

				};
				
				//location.search = $.query.set("catalog","SSCWeb").toString();
				
				return list;
			}

			function imgloaded(i) {
				$('i').attr('id',i).hide();
				imgloaded.loaded = imgloaded.loaded + 1;
				$('#status').text(imgloaded.loaded + ' of ' + imgloaded.Ndays + ' images loaded ');
				if (imgloaded.loaded = imgloaded.Ndays) {
					$('#status').text('');
				}
			}

			function viewdata(id) {
				var src = $("iframe[id="+id+"]").attr("data");
				$($("a[id="+id+"]")[1]).attr("href",TSDSFE+src);
				$($("a[id="+id+"]")[1]).text(TSDSFE+src);

				$("iframe[id="+id+"]").attr("src",src).show();
				//$.scrollTo($("iframe[id="+id+"]"));
			}
			function imgclicked(i) {
				window.location =$("a[id="+i+"]").attr('href');
			}

			function show1pdplots() {

				var timeRange  = expandISO8601Duration(selected('start')+"/"+selected('stop'));
				//alert(timeRange);
				var START_date = new Date(timeRange.split("/")[0].substring(0,10)+"T00:00:00.000Z");
				var STOP_date  = new Date(timeRange.split("/")[1].substring(0,10)+"T23:59:59.999Z");
				var START_ms   = START_date.getTime();
				var STOP_ms    = STOP_date.getTime();
				var Ndays      = Math.round((STOP_ms-START_ms)/(1000*24*60*60));

				$('#status').text('Requesting parameter metadata.');
				das = getdas();
				console.log("das");
				console.log(das);
				
				Units = new Array();
				Fills = new Array();
				k = 0;

				// For now assume all parameters have same units.
				// When tsdsfe.jyds and servlet understand http://tsds.org/dd, will use that notation.				
				
				fills  = das[0].dd.fillvalue.replace("e+","e"); // So no need to encode fill value.
				units  = das[0].dd.units;
				labels = das[0].dd.name;
				units = units.replace(/\^/g,"**");
				
				if (Ndays == 1) {
					$('#status').text('Requesting 1 image.');
				} else {
					$('#status').text('Requesting ' + Ndays + ' images.');
				}
				$("#previewimgdiv").show();	
				$('#previewimg').html("");

				imgloaded.Ndays = Ndays;
				imgloaded.loaded = 0;
				var STOP_date  = new Date(timeRange.split("/")[0].substring(0,10)+"T00:00:00.000Z");
				STOP_date.addDays(1)
				var i = 0;
				if (Ndays > 10) Ndays = 10;
				while (i < Ndays) {
					var START_dateISO = START_date.toISOString().replace(/T.*/,"");
					START_date.addDays(1);
					var STOP_dateISO  = START_date.toISOString().replace(/T.*/,"");

					 turl = "?catalog="+selected('catalog')+"&dataset="+selected('dataset')+"&parameters="+selected('parameters')+"&start="+START_dateISO+"&stop="+STOP_dateISO;
					 url = TSDSFE + "tsdsfe.jyds?server="+TSDSFE+"&catalog="+selected('catalog')+"&dataset="+selected('dataset')+"&parameters="+selected('parameters')+"&timerange="+START_dateISO+"&outformat=1";


					 if (labels !== "") url = url + "&labels="+labels;
					 if (units !== "")  {url = url + " ["+units+"]" +"&units="+units;}
					 if (fills !== "")  url = url + "&fills="+fills;

					 if (!$("#usecache").is(":checked")) {
							url = url + "&usecache=false";
							turl = turl + "&usecache=false";
					 }

					 var aurl = AUTOPLOT + "?drawGrid=true&plot.xaxis.drawTickLabels=true&width=800&height=200&url=vap+jyds:" + encodeURIComponent(url);

					links = "<a id='" + i + "' href='http://autoplot.org/autoplot.jnlp?open=vap+jyds:"+url+"'>View in Autoplot</a>";
					links = links + " | <a style='text-decoration:underline;cursor:pointer' onclick='viewdata("+i+")'>View Data</a> | <i id='"+i+"'>Requesting image</i>";
					$("#previewimg").append("<div style='position:relative'><img onclick='imgclicked("+i+")' onload='imgloaded("+i+")' id='" + i + "' style='z-index: -1' src='"+aurl+"'></img><div style='position:absolute;left:0px;top:0px;font-size:8pt'>"+links+"</div></div>");
					$("#previewimg").append("<div style='position:relative'><font size='-1'><a style='' id='" + i + "'></a></font><iframe width='98%' id='" + i + "' data='"+turl+"' style='display:none'></iframe></div>");

					//$("#img[id="+i+"]").click(function () {$(this).append("Hello")});
					i = i + 1;
				}
				//$('#previewimg img').click(function(){window.location=$(this).attr('jnlp')});
			}

			function dorequest() {
			
				url = "?catalog="+selected('catalog')+"&dataset="+selected('dataset')+"&parameters="+selected('parameters')+"&start="+selected('start')+"&stop="+selected('stop');
				
				if (selected('outformat') === 'matlab' || selected('outformat') === 'idl') {
					url = url+"&out=asc"+"&return=" + selected('outformat') + "&return=stream";
					$("#dlframe").html("");
					$("#dldiv").show();
					$("#dlframe").attr("src",url);
				} else if (selected('outformat').match(/png|pdf|svg/)) {
					url = TSDSFE+url+"&return=" + selected('outformat');
					$("#imagediv").show();
					$("#imagediv > div > a").text(url);
					$("#imagediv > div > a").attr("href",url);
					$("#imagediv > img:first").attr("src",url).load(function () {$("#imagediv > img:last").hide();});

				} else if (selected('outformat') === 'debug')  {
					url = url+"&out=asc"+"&stream=true&debug=true";
					$("#debugdiv").show();
					$("#debugframe").attr("src",url);
				} else {
					url = TSDSFE+url;
					if (selected('outformat') !== "0") { 
						url = url + "&outformat="+selected('outformat');
					}
					if (!$("#usecache").is(":checked")) {
						url = url + "&usecache=false";
					}  

					$("#datadiv").show();
					$("#datadiv > iframe").contents().find("body").html('');
					$("#datadiv > iframe").attr("src",url);
					$("#datadiv > div > a").attr("href",url);
					$("#datadiv > div > a").attr("title",url);
					$("#datadiv > div > a").text(url);

					//window.location = url;
				}
				//$('#dllinkhref').attr('href',url).text(url);
				//$('#dllinkdiv').show();
			}

			// http://paulgueller.com/2011/04/26/parse-the-querystring-with-jquery/
			jQuery.extend({
				  parseQueryString: function(){
				    var nvpair = {};
				    var qs = window.location.hash.replace('#', '');
				    var pairs = qs.split('&');
				    $.each(pairs, function(i, v){
				      var pair = v.split('=');
				      nvpair[pair[0]] = pair[1];
				    });
				    return nvpair;
				  }
				});
			
			$(function() {

				// See Harris' post at http://stackoverflow.com/questions/426258/how-do-i-check-a-checkbox-with-jquery-or-javascript
				(function( $ ) {
				    $.fn.checked = function(value) {
				        if(value === true || value === false) {
				            // Set the value of the checkbox
				            $(this).each(function(){ this.checked = value; });
				        } 
				        else if(value === undefined || value === 'toggle') {
				            // Toggle the checkbox
				            $(this).each(function(){ this.checked = !this.checked; });
				        }
				    };
				})( jQuery );

				//$('#debug').each(function(){ this.checked = false; });
				
				if (location.hash.match("usecache=false")) {
					$('#usecache').each(function(){ this.checked = false; });
					if (location.hash === "") {
						var qs = {};
					} else {
						var qs = $.parseQueryString();
					}
					qs["usecache"]="false";
					console.log(qs)					
					location.hash=decodeURIComponent($.param(qs));;
				} else {
					$('#usecache').each(function(){ this.checked = true; });
					if (location.hash === "") {
						var qs = {};
					} else {
						var qs = $.parseQueryString();
					}
					qs["usecache"]="true";
					//location.hash=decodeURIComponent($.param(qs));
					//alert("--Setting");
				}
				
				if (location.hash.match("preview=false")) {
					$('#previewimgcheckbox').each(function(){ this.checked = false; });
				} else {
					$('#previewimgcheckbox').each(function(){ this.checked = false; });
				}
				

				//dropdown2(["catalog"],["Catalog"],[catalogs],"#dropdowns",0,"",function () {});
				dropdown2(["catalog","dataset","parameters","start","stop","outformat"],["Catalog","Datasets","Parameters","Start","Stop","Output"],[catalogs,datasets,parameters,starttime,stoptime,outformat],"#dropdowns",0,"");

				//dropdown2(["tests"],["Tests"],[tests],"#dropdownstest");

				if (location.hash !== "") {
					triggerselect();
				}			
				//preview();
				
				return;
				console.log("Binding hashchange");
				//$(window).hashchange.byurledit = false;
				$(window).hashchange.byurledit = true;
				$(window).bind("hashchange",function() {
					
					//$(window).hashchange.lashash = qs; 
					// Need to figure out what parameter was changed and then remove all parameters after that.  Otherwise
					// User could change the catalog and the parameter list will not be updated.
					console.log("Hash change");
					console.log($(window).hashchange.byurledit);
					if ($(window).hashchange.byurledit) {
						var qs = $.parseQueryString();
						console.log("Hash change made by manual edit to URL");
						console.log("Last hash")
						console.log(qs);
						for (var id in qs) {
							console.log("Triggering: " + qs[id]);
							// This creates an infinite loop.
							//$("#"+id).val(qs[id]).data("autocomplete")._trigger("select",event,{item:qs[id]});
						}
//							$("#"+id).val(qs[id]).data("autocomplete")._trigger("select",event,{item:qs[id]});
					}					
					$(window).hashchange.byurledit = true;
				});										

				return;

//				function callback(id) {
			//}

				// Use for testing random?
				function autoselect(el,N) {
					$(el+"list").click();
					if (arguments.length < 2)
						N = 1;
					for (i = 0; i < N;i++) {
						$(el).simulate("keydown", { keyCode: $.ui.keyCode.DOWN });
					}
					$(el).simulate("keydown", { keyCode: $.ui.keyCode.ENTER });
				}

					
				$("#demo").click(function () {
					autoselect("#catalog",1);
					autoselect("#dataset");
					autoselect("#start");
					autoselect("#stop");
					autoselect("#parameters");
				})
			});
		</script>
		
	</head>

 	<body>	 		
 	
 		<div style="text-align:center;position:absolute;top:0;left:12em;"><font size="-2"><span id="status" style="background-color:yellow;text-align:center"></span></font></div>
 	
 		<div style="float:left;width:10em;margin-right:10px;margin-top:0em;">
 			<font size="-1">		
				<div title="Show preview images of data when a parameter is selected."><input id="previewimgcheckbox" type="checkbox" value=""/>&nbsp;Show preview plots</div>
				<div title="For fastest response time, use cached data.  Disable this for data that change frequently."><input id="usecache" type="checkbox" value=""/>&nbsp;Use cached data if avail.</div>
			</font>
			<span id="dropdowns0"></span>
			<span id="dropdowns1" style="display:none"></span>
			<span id="dropdowns2" style="display:none"></span>
			<span id="dropdowns3" style="display:none"></span>
			<span id="dropdowns4" style="display:none"></span>
			<span id="dropdowns5" style="display:none"></span>
			<button type="button" onclick="window.location=window.location.pathname">Clear</button>
		</div>
		<div id="overviewdiv" style="margin-left:12em;;margin-top:1em">
			<b>Overview:</b>
			<ul>
				<li>This interface may be used to build a <a href="http://tsds.org/tsdsfe">TSDS Front End (TSDSFE)</a> URL for downloading data.</li>
				<li>Begin by selecting a catalog on the left.</li>
				<li>Or, select a test</li>
			</ul>
			<div style="margin-left:2.5em;margin-top:-1em;width:10em;" >
				<span id="dropdownstest0"></span>
			</div>
		</div>
		
		<br/>
	
		<div id="infodiv" style="margin-left:12em;;margin-top:0em;">		
			<div id="dldiv" style="background-color:white;display:none;">
				<div><b>Download script:</b></div>
				<iframe id="dlframe" style="width:95%;height:20em;"></iframe>
			</div>
			<div id="imagediv" style="background-color:white;width:100%;height:100%;display:none;">
				<b>Output:</b><br/>
				<div>Direct link: <a target="_blank"></a></div>
				<img></img>
				<img id="imgdivloading" src="css/ajax-loader.gif"/>
			</div>
			<div id="datadiv" style="display:none;background-color:white;align:left">
				<div><a target="_blank">Data</a></div>
				<iframe style="width:95%;height:100%;"></iframe>
			</div>

			<div id="cataloginfo" style="display:none;width:95%"></div>
			<div id="datasetinfo" style="display:none;width:95%"></div>
			<div id="parameterinfo" style="display:none;width:95%"></div>
			<div id="outputinfo" style="display:none;width:95%">
				<b>Output options:</b>
				<ul>
					<li>0: Native (if original was ASCII)</code></li>
					<li>1: Space-separated values with <a href="http://www.w3.org/TR/NOTE-datetime">ISO8601</a> timestamps (e.g., <code>2000-01-01T00:00:00.0 1.1 9.0)</code></li>
					<li>2: Space-separated values with Year Month Day Hour Minute FractionalSection timestamps (e.g., <code>2000 1 1 0 0 0.0 1.1 9.0)</code></li>
				    <li>PNG - A single PNG image with data over selected time range</li>
				    <li>PDF - A single PDF file with data over selected time range</li>
				    <li>SVG - A single SVG file with data over selected time range</li>
					<li>IDL (script) - A script that when executed in IDL, creates a data array <code>D</code> and label array <code>L</code>.</li>
					<li>MATLAB (script) - A script that when executed in MATLAB, creates a data array <code>D</code> and label array <code>L</code>.</li>
				</ul>
			</div>			
		</div>
		<div id="debugdiv" style="margin-left:12em;background-color:white;width:100%;height:100%;display:none;">
			<div><b>Debug info</b></div>
			<iframe id="debugframe" style="width:95%;height:100%;"></iframe>
		</div>
		<div id="previewimgdiv" style="margin-left:12em;display:none;">
			<div><b>Preview plots:</b></div>
			<div id="previewimg" style="width:95%;border: 3px solid black;overflow: auto">
				<img src=""></img>
			</div> 
		</div>
	</body>
	
</html>

