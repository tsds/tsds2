<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
	<head>
		<meta http-equiv="Content-type" content="text/html;charset=UTF-8">
		<title>TSDSFE</title>

		<link rel="stylesheet" href="css/jquery-ui-1.9.2.css">
		<link rel="stylesheet" type="text/css" href="css/gui.css">
		<link rel='shortcut icon' type='image/x-icon' href='css/images/favicon.ico' />

		<script type="text/javascript" src="js/deps/jquery-1.8.3.min.js"></script>
		<script type="text/javascript" src="js/deps/jquery-ui-1.9.2.js"></script>
		<script type="text/javascript" src="js/deps/jquery-simulate-0.0.1.js"></script>
		<script type="text/javascript" src="js/deps/date.js"></script>
		<!-- http://benalman.com/projects/jquery-url-utils-plugin/ -->
		<script type="text/javascript" src="js/deps/jquery.query-2.1.3.js"></script>
		<script type="text/javascript" src="js/deps/jquery.ba-hashchange-1.3.js"></script>
		<script type="text/javascript" src="js/jquery.scrollTo-min.js"></script>
		<script type="text/javascript" src="js/expandtemplate.js"></script>
		<script type="text/javascript" src="js/dropdown2.js"></script>
		<script>

			TSDSFE   = location.href.split("#")[0]; // Get domain name of server.

			$(function() {
				checkstatus();
				main();
				setInterval(checkstatus,1000);
			})

			function checkstatus() {
				if (!checkstatus.deps) checkstatus.deps = {}
				if (!checkstatus.servers) checkstatus.servers = {}

				$.ajax({
					type: "GET",
					url: TSDSFE + "status",
					async: true,
					dataType: "json",
					success: function (data,textStatus, jqXHR) {

						console.log(data)
						checkstatus.deps = data.deps
						checkstatus.servers = data.servers

						for (key in checkstatus.deps) {
							if (!checkstatus.deps[key].state) {
									//console.log(data[key].message);
									if ($("#statusinfo ul").find("#"+key).length == 0) {
										$("#statusinfo ul").append("<li id='"+key+"'>" + checkstatus.deps[key].message + "</li>")
										$("#statusinfo").show();
									}
								} else {
									$("#statusinfo ul").find("#"+key).remove();
								}
							}
							if ($("#statusinfo ul li").length == 0) {
								$("#statusinfo").hide();
							}
						}
					})
			}

			var FONTS = [];
			var COLORS = {};
			$.getJSON( "js/css-color-names.json", function( data ) {COLORS=data;});
			$.getJSON( "js/autoplotserverfonts.json", function( data ) {FONTS=data;});

			function main() {

				//$('#cachecheckboxes').hide();
				$('#cachecheckboxeslink').click(function () {$("#cachecheckboxes").toggle();});
				
				// Default for using data cache is true.  Unselect checkbox if usedatacache=true is in URL.
				if (location.hash.match("usedatacache=false")) {
					$('#usedatacache').each(function(){ this.checked = false; });
					if (location.hash === "") {
						var qs = {};
					} else {
						var qs = $.parseQueryString();
					}
					qs["usedatacache"] = "false"; 
					console.log(qs)					
					location.hash=decodeURIComponent($.param(qs));;
				} else {
					$('#usedatacache').each(function(){ this.checked = true; });
					if (location.hash === "") {
						var qs = {};
					} else {
						var qs = $.parseQueryString();
					}
					qs["usedatacache"]="true";
				}
				
				// Default for preview checkbox is always false.
				if (location.hash.match("preview=false")) {
					$('#previewimgcheckbox').each(function(){ this.checked = false; });
				} else {
					$('#previewimgcheckbox').each(function(){ this.checked = false; });
				}

				// Default for metadatacache checkbox.
				$('#usemetadatacache').each(function(){ this.checked = true; });

				// Default for metadatacache checkbox.
				$('#useimagecache').each(function(){ this.checked = true; });

				// Create the first drop-down (subsequent drop-downs appear when something is selected).
				dropdown2(["catalog","dataset","parameters","start","stop","return","format","type","style"],
							["Catalog","Datasets","Parameters","Start","Stop","Return","Format","Type","Style"],
							[catalogs,datasets,parameters,starttime,stoptime,returntype,format,type,style],
							"#dropdowns",0,"");

				// If initial URL has arguments after #, trigger select on dropdowns.
				if ( (location.hash !== "") && (location.hash !== "#catalog=^.*") ) {
					console.log("Triggering select because initial hash is populated.");
					triggerselect();
				}			

				// Show test dropdown.
				//dropdown2(["tests"],["Tests"],[tests],"#dropdownstest");

				return; // Following code needs work.

				// Update drop-downs when URL is changed manually.
				console.log("Binding hashchange");
				$(window).hashchange.byurledit = true;
				$(window).bind("hashchange",function() {
					
					//$(window).hashchange.lashash = qs; 
					// Need to figure out what parameter was changed and then remove all parameters after that.  Otherwise
					// User could change the catalog and the parameter list will not be updated.
					console.log("Hash change");
					console.log($(window).hashchange.byurledit);
					if ($(window).hashchange.byurledit) {
						var qs = $.parseQueryString();
						console.log("Hash change made by manual edit to URL");
						console.log("Last hash")
						console.log(qs);
						for (var id in qs) {
							console.log("Triggering: " + qs[id]);
							// This creates an infinite loop.
							//$("#"+id).val(qs[id]).data("autocomplete")._trigger("select",event,{item:qs[id]});
						}
							//$("#"+id).val(qs[id]).data("autocomplete")._trigger("select",event,{item:qs[id]});
					}					
					$(window).hashchange.byurledit = true;
				});										
			}

			// See Harris' post at http://stackoverflow.com/questions/426258/how-do-i-check-a-checkbox-with-jquery-or-javascript
			(function( $ ) {
				$.fn.checked = function(value) {
					if(value === true || value === false) {
						// Set the value of the checkbox
						$(this).each(function(){ this.checked = value; });
					} 
					else if(value === undefined || value === 'toggle') {
						// Toggle the checkbox
						$(this).each(function(){ this.checked = !this.checked; });
					}
				};
			})( jQuery );

			// http://paulgueller.com/2011/04/26/parse-the-querystring-with-jquery/
			jQuery.extend({
				  parseQueryString: function(){
					var nvpair = {};
					var qs = window.location.hash.replace('#', '');
					var pairs = qs.split('&');
					$.each(pairs, function(i, v){
					  var pair = v.split('=');
					  nvpair[pair[0]] = pair[1];
					});
					return nvpair;
				  }
			});
			
			function triggerselect() {
				// Set inital values of drop-downs based on hash.
				qs = $.parseQueryString();
				console.log("Initial query string: " + JSON.stringify(qs));
				if (qs["catalog"]) {
					if (qs["catalog"] === "^.*") return;
				}		
				for (var id in qs) {
					console.log("Triggering select for drop-down with id = "+id);
					$("#"+id).val(qs[id]).data("autocomplete")._trigger("select",event,{item:qs[id]});
				}
			}				

			function tsdsfeajax(i,url) {

				url = TSDSFE + url;
				$('#status').show();

				// TSDSFE default is usemetadatacache=true.  Must explicity
				// set in URL otherwise.
				if (!$("#usemetadatacache").is(":checked")) {
					url = url + "&usemetadatacache=false";
				}

				// Client-side cache of response.
				if (typeof(tsdsfeajax.cache) === "undefined") {
					tsdsfeajax.cache = {};
				}
				if (tsdsfeajax.cache[url]) {
					console.log("tsdsfeajax(): Client-side cache hit.");
					$('#status').html("Received <a target='_blank' href='" + url + "'>"+url.replace("&para","&#38;para")+"</a>");
					return $.parseJSON(tsdsfeajax.cache[url]);
				}
				$('#status').html("Requesting " + url);
				console.log("tsdsfeajax(): Requesting " + url);

				$.ajax({
					type: "GET",
					url: url,
					async: false,
					dataType: "text",
					success: function (data,textStatus, jqXHR) {
						console.log("tsdsfeajax(): Loaded data for dropdown"+i);
						$('#ready'+i).show();
						if (!data.match(/^\s*\[/)) {
							console.log("tsdsfeajax(): Comma separated list received.  Converting to an array.")
							xret = data.replace(/,$/,"").replace(/\n/,'').split(",");
						} else {
							xret = data;
						}
						$('#status').html("Received <a target='_blank' href='" 
											+ url + "'>"
											+ url.replace("&para","&#38;para")+"</a>");
						//Hide status information.
						//setTimeout(function () {$('#status').html("")}, 3000);
					},
					error: function (xhr, textStatus, errorThrown) {
						$('#status'+i).text("tsdsfeajax(): Error encountered when attempting to retrieve <a target='_blank' href='" 
											+ url + "'>"
											+ url.replace("&para","&#38;para")+"</a>");
					}
				});

				console.log("tsdsfeajax(): Info returned by tsdsfeajax():")				
				console.log($.parseJSON(xret));

				// Cache response.
				tsdsfeajax.cache[url] = xret;

				return $.parseJSON(xret);				
			}
						
			function selected(name) {
				// Determine the value selected.

				// When drop-down value is selected, URL should be up-to-date.  Use
				// value in URL.
				if (location.hash !== "") {
					var qs = $.parseQueryString();
					if (qs[name]) {
						console.log("selected(): Determining selected value for " + name + " using hash.  Value = "+qs[name]);
						return qs[name];
					}
				}

				console.log("selected(): Determining selected value for " + name + " using dropdown.  Value = "+$("span[name='"+name+"']").attr('value'));

				return $("span[name='"+name+"']").attr('value');
			}

			function hidedivs(selected) {
				if (selected==="catalogs") {
					$('#datasetinfo').html("");
					$('#parameterinfo').html("");
					$('#returninfo').hide();
					$('#formatinfodata').hide();
					$('#formatinfoscript').hide();
					$('#formatinfoimage').hide();
					$('#styleinfoimage').hide();
					$('#scriptdiv').hide();
					$('#datadiv').hide();
					$('#imagediv').hide();
					$('#imagediv #image').attr("src","");
					$('#imagediv a').attr("src","");
					$('#gallerydiv').hide();
					$('#gallerydiv iframe').attr("src","");
					$('#gallerydiv a').attr("src","");
					$('#previewimgdiv').hide();
					$('#overviewdiv').hide();
				}
				if (selected==="datasets") {
					$('#parameterinfo').html("");
					$('#returninfo').hide();
					$('#formatinfodata').hide();
					$('#formatinfoscript').hide();
					$('#formatinfoimage').hide();
					$('#styleinfoimage').hide();
					$('#scriptdiv').hide();
					$('#datadiv').hide();
					$('#imagediv').hide();
					$('#imagediv #image').attr("src","");
					$('#imagediv a').attr("src","");
					$('#gallerydiv').hide();
					$('#gallerydiv iframe').attr("src","");
					$('#gallerydiv a').attr("src","");
					$('#previewimgdiv').hide();
					$('#overviewdiv').hide();
				}
				if (selected==="parameters") {
					$('#returninfo').hide();
					$('#formatinfodata').hide();
					$('#formatinfoscript').hide();
					$('#formatinfoimage').hide();
					$('#styleinfoimage').hide();
					$('#scriptdiv').hide();
					$('#datadiv').hide();
					$('#imagediv').hide();
					$('#imagediv #image').attr("src","");
					$('#imagediv a').attr("src","");
					$('#gallerydiv').hide();
					$('#gallerydiv iframe').attr("src","");
					$('#gallerydiv a').attr("src","");
					$('#previewimgdiv').hide();
					$('#overviewdiv').hide();
				}
				if (selected === "return") {
					$("#typeinfoimage").hide();
					$('#formatinfodata').hide();
					$('#formatinfoscript').hide();
					$('#formatinfoimage').hide();
					$('#styleinfoimage').hide();
					$('#scriptdiv').hide();
					$('#datadiv').hide();
					$('#imagediv').hide();
					$('#imagediv #image').attr("src","");
					$('#imagediv a').attr("src","");
					$('#gallerydiv').hide();
					$('#gallerydiv iframe').attr("src","");
					$('#gallerydiv a').attr("src","");
					$('#previewimgdiv').hide();
					$('#overviewdiv').hide();
				}
				if (selected==="format") {
					$('#styleinfoimage').hide();
					$('#imagediv').hide();
					$('#imagediv #image').attr("src","");
					$('#imagediv a').attr("src","");
					$('#gallerydiv').hide();
					$('#gallerydiv iframe').attr("src","");
					$('#gallerydiv a').attr("src","");
					$('#previewimgdiv').hide();
					$('#overviewdiv').hide();
				}
			}
			
			function catalogs(i) {

				catalogs.onselect = function () {

					// Triggered when a catalog is selected in drop-down.
					console.log("catalogs.onselect(): Called");
					
					var url = "?catalog="+selected('catalog');
					
					info = tsdsfeajax(i,url);
					catalog.info = info;
					$('#cataloginfo').html("<b>Catalog information:</b>");
					if (info.length > 0) {
						$('#cataloginfo').append('<ul style="list-style-position: outside;">');	

						if (checkstatus.servers) {
							if (checkstatus.servers[selected('catalog')]) {
								if (!checkstatus.servers[selected('catalog')].state) {
									$('#cataloginfo ul').append('<li style=""><span style="background-color:yellow">'+checkstatus.servers[selected('catalog')].message+'</span></li>');
								}
							}
						}

						$('#cataloginfo ul').append('<li style="">TSDS ID: ' +selected('catalog')+'</li>');


						//console.log("Info: " + info[0].title);
						for (j = 0;j < info.length;j++) {
							if (!(info[j].title === "") && !(info[j].link === "")) {
								$('#cataloginfo ul').append('<li style=""><a href="'+info[j].link+'" title="'+info[j].link+'">'+info[j].title+'</a></li>');
							} else if ((info[j].title === "") && !(info[j].link === "")) {
								$('#cataloginfo ul').append('<li style=""><a href="'+info[j].link+'" title="'+info[j].link+'">'+info[j].link+'</a></li>');
							}
						}
 
 						if (checkstatus.servers) {
							if (checkstatus.servers[selected('catalog')]) {
								if (checkstatus.servers[selected('catalog')].state) {
									var delta = (new Date).getTime()-checkstatus.servers[selected('catalog')].lastcheck;
									$('#cataloginfo ul').append('<li style=""><span>SSCWeb server working.  Last check '+Math.round(delta/1000)+' seconds ago.  Check interval is '+checkstatus.servers[selected('catalog')].checkperiod/1000+' seconds.</span></li>');
								}
							}
						}

					} else if (info.length == 0) {
						$('#cataloginfo').append('<ul style="list-style-position: outside;">');	
						$('#cataloginfo ul').append('<li style="">Catalog <b>' + selected("catalog") + '</b> was not found in <a href="' + TSDSFE + '?catalogs=^.*">catalog list</a></li>');
					}
					$('#catalogtinfo ul').append('</ul>');

					$('#cataloginfo').show();
					hidedivs("catalogs");
				};

				return tsdsfeajax(i,"?catalog=^.*");
			}

			function showpre(el) {
				if ($(el).next().is(":visible")) {
					$(el).next().hide();
				} else {
					$(el).next().show();
				}
			}
			
			function datasets(i) {

				datasets.onselect = function () {
					info = tsdsfeajax(i,"?catalog="+selected('catalog')+"&dataset="+selected('dataset'));
					$('#datasetinfo').html("<b>Dataset documentation:</b>")
					$('#datasetinfo').append('<ul style="list-style-position: outside;">');
					$('#datasetinfo ul').append('<li style="">TSDS ID: ' +selected('dataset')+'</li>');
					if (info.length > 0) {
						for (j = 0;j < info.length;j++) {
							if (!(info[j].title === "") && !(info[j].link === "")) {
								$('#datasetinfo ul').append('<li style=""><a href="'+info[j].link+'">'+info[j].title+'</a></li>');
							} else if ((info[j].title === "") && !(info[j].link === "")) {
								$('#datasetinfo ul').append('<li style=""><a href="'+info[j].link+'">'+info[j].link+'</a></li>');
							} else if (!(info[j].text === "")) {
								if (info[j].text.match("/>")) { // Guess HTML

								} else {
									var label =  info[j].title || "Other documentation";
									if (label.match("acknowledgement")) {
										$('#datasetinfo ul').append('<li>'+label+':<font size=-1>'+info[j].text+'</font></li>');
									} else {
										$('#datasetinfo ul').append('<li><a style="text-decoration:underline;cursor:pointer" onclick="showpre(this)">'+label+':</a><pre style="display:none;overflow-x:scroll;">'+info[j].text+'</pre></li>');
									}
								}
							}
						}

					} else {
						if (catalog.info.length > 0) { 
							$('#datasetinfo ul').append('<li style="">Dataset <b>' + selected("dataset") + '</b> was not found in <a href="' + TSDSFE + '?catalog='+selected('catalog')+'&dataset=^.*">catalog list</a></li>');
						} else {
							$('#datasetinfo').hide();
						}
					}
					$('#datasetinfo ul').append('</ul>');
					$('#datasetinfo').show();					
					hidedivs("datasets");
				};

				var list = null;
				delete list;
				list = tsdsfeajax(i,"?catalog="+selected('catalog')+"&dataset=^.*");
				var cat0 = selected('catalog').substring(0,1);

				for (var k = 0; k < list.length; k++) {
					if (list[k].label === "") {
						list[k].label = list[k].name;
					}
					if (list[k].label.length > 60) {
						list[k].label = list[k].value + ": " + list[k].label.substring(0,60) + " ...";
					} else if (list[k].label === "") {
						list[k].label = list[k].value  + ": (no label or name in catalog)";						
					} else {
						list[k].label = list[k].value + ": " + list[k].label;
					}
					// Show catalog where it is from 
					if (cat0 === "^") {
						list[k].label = list[k].catalog + "/" + list[k].label;
					}

				}

				function compare(a,b) {
					  if (a.value < b.value) return -1;
					  if (a.value > b.value) return 1;
					  return 0;
				}

				list.sort(compare); // Alpha sort.
				return list
			}
			
			function starttime(i) {
				starttime.onselect = function () {
					$('#datadiv').hide();
				};

				info = tsdsfeajax(i,"?catalog="+selected('catalog')+"&dataset="+selected('dataset')+"&parameters="+selected('parameters'));
				var list = [];

				list[1] = {};
				list[1].label = info[0].dd.start.replace(/\n/g,"").substring(0,10);
				list[1].value = info[0].dd.start.replace(/\n/g,"").substring(0,10);

				list[0] = {};
				list[0].selected = true;

				if (info[0].dd.cadence === "") {
					list[0].label = "-P3D";
					list[0].value = "-P3D";
				}
				
				if (info[0].dd.cadence.match(/T/)) {
					if (info[0].dd.cadence.match(/H/)) {
						list[0].label = "-P30D";
						list[0].value = "-P30D";
					} else if (info[0].dd.cadence.match(/M/)) {
						list[0].label = "-P3D";
						list[0].value = "-P3D";
					} else {
						list[0].label = "-P2D";
						list[0].value = "-P2D";
					}
				}
				if (!info[0].dd.cadence.match(/T/) && !(info[0].dd.cadence === "")) {
					if (info[0].dd.cadence.match(/Y|M/)) {
						list[0].label = info[0].dd.start;
						list[0].value = info[0].dd.start;
					} else {
						list[0].label = "-P1Y";
						list[0].value = "-P1Y";
					}
				}
				if (info[0].dd.cadence.match(/PT[0-9]D|PT[0-9]Y/)) {
					// Case where T was not supposed to be there.
					if (info[0].dd.cadence.match(/Y/)) {
						list[0].label = info[0].dd.start;
						list[0].value = info[0].dd.start;
					} else {
						list[0].label = "-P1Y";
						list[0].value = "-P1Y";
					}
					
				}

				
				if (!list[0].label) {
					// Make call to determine cadence.
				}
				
				//list[0].label = info[0].dd.start;
				//list[0].value = info[0].dd.start;

				return list;
			}
			
			function stoptime(i) {
				stoptime.onselect = function () {
					preview();
					$('#datadiv').hide();
					$('#returninfo').show();				
				}

				// No need to do this again ...
				info = tsdsfeajax(i,"?catalog="+selected('catalog')+"&dataset="+selected('dataset')+"&parameters="+selected('parameters'));
				var list = [];
				list[0] = {};

				console.log(selected('start'))

				var start = info[0].dd.start.replace(/\n/g,"").substring(0,10);
				var stop = info[0].dd.stop.replace(/\n/g,"").substring(0,10);
				if (info[0].dd.stop.match("P")) {
					var timeRange  = expandISO8601Duration(start+"/"+stop);
					var stop = timeRange.split("/")[1].substring(0,10)
				} else {
				}
				
				list[0].label = stop;
				list[0].value = stop;

								
				return list;
			}
			
			function parameters(i) {

				parameters.onselect = function () {
					console.log('parameters.onselect(): Called.');

					$('#datadiv').hide();
					$('#imagediv').hide();					
					var das = tsdsfeajax(i,"?catalog="+selected('catalog')+"&dataset="+selected('dataset')+"&parameters="+selected('parameters'));

					$('#parameterinfo').html("<b>Parameter information:</b>")
					$('#parameterinfo').show();					
					$('#parameterinfo').append('<ul style="list-style-position: outside;">');

					if (das.length > 0) {
						var range = das[0].dd.start + " through " + das[0].dd.stop;
						var fills  = das[0].dd.fillvalue || "";
						var units  = das[0].dd.units || "";
						var name  = das[0].dd.name || "";
						var parameter  = das[0].dd.label || "";
						var label = das[0].dd.label || "";	
						var labels = das[0].dd.columnLabels || "";	
						var id  = das[0].dd.id || "";
						$('#parameterinfo ul').append('<li style="">TSDS ID: '+id+'</li>');
						if (name !== "")
							$('#parameterinfo ul').append('<li style="">Name: '+name+'</li>');
						if (label !== "")
							$('#parameterinfo ul').append('<li style="">Label: '+label+'</li>');
						$('#parameterinfo ul').append('<li style="">Availability: ' +range+'</li>');
						$('#parameterinfo ul').append('<li style="">Cadence: ' +das[0].dd.cadence+'</li>');
						if (labels !== "")
							$('#parameterinfo ul').append('<li style="">Column Labels: '+labels+'</li>');
						$('#parameterinfo ul').append('<li style="">Column Units: ' +units+'</li>');
						$('#parameterinfo ul').append('<li style="">Column Fills: ' +fills+'</li>');
					} else {
						$('#parameterinfo ul').append('<li style="">Parameter <b>' + selected("parameters") + '</b> was not found in <a href="' + TSDSFE + '?catalog='+selected('catalog')+'&dataset='+selected('dataset')+'&parameters=^.*">dataset list</a></li>');
						
					}
					$('#parameterinfo').append('</ul>');
					hidedivs("parameters")
				};

				parameters.list = tsdsfeajax(i,"?catalog="+selected('catalog')+"&dataset="+selected('dataset')+"&parameters=^.*");
				var list = parameters.list;
				for (var k = 0; k < list.length; k++) {
					if (list[k].label.length > 60) {
						list[k].label = list[k].value + ": " + list[k].label.substring(0,60) + " ...";
					} else if (list[k].label === "") {
						list[k].label = list[k].value;						
					} else {
						list[k].label = list[k].value + ": " + list[k].label;
					}
				}
				
				return list;
			}
			
			function returntype(i) {
				returntype.onselect = function () {
					hidedivs("return");
					$('#formatinfo'+selected('return')).show();
				}				
				values = [
							{label:"Data", value:"data"},
							{label:"Image", value:"image"},
							{label:"Script", value:"script"}

						];
				return values;
			}

			function format(i) {
				format.onselect = function () {
					if (!selected("return").match("image")) {
						$("#typeinfoimage").hide();
						$("#"+selected("return")+"div").show();
						dorequest();
					} else {
						$("#typeinfoimage").show();
					}
					hidedivs("format");
				}
				if (selected("return").match("data")) {
					values = [
								{label:"Data (native)", value:"0"},
								{label:"Data (iso)",value:"1"},
								{label:"Data (yyyy mm dd hh mm ss)",value:"2"}
							];
				}
				if (selected("return").match("image")) {
					values = [
								{label:"PNG",value:"png"},
								{label:"PDF",value:"pdf"},
								{label:"SVG",value:"svg"},
								{label:"JNLP",value:"jnlp"},
								{label:"Gallery",value:"viviz"}
							];					
				}
				if (selected("return").match("script")) {
					values = [
								{label:"IDL (script)",value:"idl"},
								{label:"MATLAB (script)",value:"matlab"}
							];
				}

				return values;
			}

			function type(i) {
				type.onselect = function () {
					if (!selected("return").match("image")) {
						$("#styleinfoimage").hide();						
					} else {
						$("#styleinfoimage").show();
					}
					hidedivs("type");
				}
				type.show = function () {
					console.log("++++++type.show")
					//console.log( arguments.callee.caller.toString())
					if (selected("return") === "image") {
						return true;
					} else {
						return false;
					}
				}
				values = [
							{label:"Time Series", value:"timeseries", selected:"true"},
							{label:"Autocorrelation", value:"autocorrelation"},
							{label:"Histogram", value:"histogram"},
							{label:"Periodogram", value:"periodogram"},
							{label:"Spectrogram", value:"spectrogram"}
						];
				return values;
			}

			function style(i) {
				style.onselect = function () {
					dorequest();
					//$("#"+selected("return")+"div").show();
				}
				style.show = function () {
					if (selected("return") === "image") {
						return true;
					} else {
						return false;
					}
				}
				values = [
							{label:"None/Black/Blue", value:"0", selected:true},
							{label:"Black/Yellow/Yellow", value:"1"},
							{label:"Sparkline", value:"2"}
						];
				return values;
			}

			function dorequest() {
				$("#status").hide();
				url = "?catalog="
							+selected('catalog')
							+"&dataset="+selected('dataset')
							+"&parameters="+selected('parameters')
							+"&start="+selected('start')
							+"&stop="+selected('stop');
				
				if (selected('return').match(/script/)) {
					url = url+"&return=script&format=" + selected('format');
					$("#dlframe").html("");
					$("#dlframe").attr("src",url);
				} else if (selected('return').match(/image/)) {
					url = TSDSFE+url+"&return=image&format="+selected('format')+"&type="+selected('type')+"&style="+selected('style');
					if (selected('format').match("viviz")) {
						//location.href = url;
						//window.open(url)
						$("#gallerydiv").show();
						$("#gallerydiv > div > a").attr("href",url);
						$("#gallerydiv > div > a").attr("title",url);
						$("#gallerydiv > iframe").contents().find("body").html('');
						$("#gallerydiv > iframe").attr("src",url);
						$("#imagediv").hide();
						return
					}

					$("#imagediv").show();
					$("#imagediv #imageloading").show()
					//$("#imagediv > div > a").text(url);
					$("#imagediv > div > a").attr("href",url);
					$("#imagediv > div > a").attr("title",url);
					if (selected('format').match(/png|svg/)) {
						$("#imagediv #image").attr("src",url).load(function () {
							$("#imagediv #imageloading").hide();
						});
					} else {
						var curr = $("#imagediv div a");
						$("#imagediv #image").hide();
						$("#imagediv div").html(curr);
						if (selected('format').match(/pdf/)) {
							$("#imagediv div a").html("Download PDF");
						}
						if (selected('format').match(/jnlp/)) {
							$("#imagediv div a").html("Download JNLP");
						}
					}
				} else if (selected('format') === 'debug')  {
					url = url+"&out=asc"+"&stream=true&debug=true";
					$("#debugdiv").show();
					$("#debugframe").attr("src",url);
				} else {
					url = TSDSFE+url;
					if (selected('format') !== "0") { 
						url = url + "&format="+selected('format');
					}
					if (!$("#usedatacache").is(":checked")) {
						url = url + "&usedatacache=false";
					}

					// To work-around bug in how browsers mis-handle concatenated gzip files.
					// See tsdsfe.js code comments.  
					url = url + "&attach=false";

					$("#datadiv").show();
					$("#datadiv > iframe").contents().find("body").html('');
					$("#datadiv > iframe").attr("src",url);
					$("#datadiv > div > a").attr("href",url);//.replace("&attach=false",""));
					$("#datadiv > div > a").attr("title",url);//.replace("&attach=false",""));
				}
			}

			function viewdata(id) {
				var src = $("iframe[id="+id+"]").attr("data");
				$($("a[id="+id+"]")[1]).attr("href",TSDSFE+src);
				$($("a[id="+id+"]")[1]).text(TSDSFE+src);
				$("iframe[id="+id+"]").attr("src",src).show();
			}

			function preview() {
				//location.hash = location.hash.replace("&format=0","");
				if (!$("#usedatacache").is(":checked") && !location.hash.match("usedatacache=false")) {
					//location.hash = location.hash + "&usedatacache=false";
				}  
				
				if (!$("#previewimgcheckbox").is(":checked") && !location.hash.match("preview=false")) {
					//location.hash = location.hash + "&preview=false";
				} else {
					show1pdplots();
				} 

				function show1pdplots() {

					// Show 1 day plots for preview.
					var timeRange  = expandISO8601Duration(selected('start')+"/"+selected('stop'));
					//alert(timeRange);
					var START_date = new Date(timeRange.split("/")[0].substring(0,10)+"T00:00:00.000Z");
					var STOP_date  = new Date(timeRange.split("/")[1].substring(0,10)+"T23:59:59.999Z");
					var START_ms   = START_date.getTime();
					var STOP_ms    = STOP_date.getTime();
					var Ndays      = Math.round((STOP_ms-START_ms)/(1000*24*60*60));

					$('#status').text('Requesting parameter metadata.');
					var das = tsdsfeajax(i,"?catalog="+selected('catalog')+"&dataset="+selected('dataset')+"&parameters="+selected('parameters'));
					
					Units = new Array();
					Fills = new Array();
					k = 0;

					// For now assume all parameters have same units.
					// When tsdsfe.jyds and servlet understand http://tsds.org/dd, will use that notation.				
					
					fills  = das[0].dd.fillvalue.replace("e+","e") || ""; // So no need to encode fill value.
					fills  = das[0].dd.fillvalue.replace("E+","E") || ""; // So no need to encode fill value.
					units  = das[0].dd.units || "";
					labels = das[0].dd.name || "";
					units = units.replace(/\^/g,"**") || "";
					
					if (Ndays == 1) {
						$('#status').text('Requesting 1 image.');
					} else {
						$('#status').text('Requesting ' + Ndays + ' images.');
					}
					$("#previewimgdiv").show();	
					$('#previewimg').html("");

					imgloaded.Ndays = Ndays;
					imgloaded.loaded = 0;
					var STOP_date  = new Date(timeRange.split("/")[0].substring(0,10)+"T00:00:00.000Z");
					STOP_date.addDays(1)
					var i = 0;
					if (Ndays > 10) Ndays = 10;
					while (i < Ndays) {
						var START_dateISO = START_date.toISOString().replace(/T.*/,"");
						START_date.addDays(1);
						var STOP_dateISO  = START_date.toISOString().replace(/T.*/,"");

						 ploturl = "?catalog="+selected('catalog')+"&dataset="+selected('dataset')+"&parameters="+selected('parameters')+"&start="+START_dateISO+"&stop="+STOP_dateISO+"&return=image";
						 dataurl = TSDSFE + "scripts/tsdsfe.jyds?server="+TSDSFE+"&catalog="+selected('catalog')+"&dataset="+selected('dataset')+"&parameters="+selected('parameters')+"&timerange="+START_dateISO+"&format=1";


						 if (!$("#usedatacache").is(":checked")) {
								dataurl = dataurl + "&usedatacache=false";
								okiturl = ploturl + "&usedatacache=false";
						 }

						 
						links = "<a id='" + i + "' href='http://autoplot.org/autoplot.jnlp?open=vap+jyds:"+dataurl+"'>View in Autoplot</a>";
						links = links + " | <a style='text-decoration:underline;cursor:pointer' onclick='viewdata("+i+")'>View Data</a> | <i id='"+i+"'>Requesting image</i>";
						$("#previewimg").append("<div style='position:relative'><img onclick='imgclicked("+i+")' onload='imgloaded("+i+")' id='" + i + "' style='z-index: -1' src='"+ploturl+"'></img><div style='position:absolute;left:0px;top:0px;font-size:8pt'>"+links+"</div></div>");
						$("#previewimg").append("<div style='position:relative'><font size='-1'><a style='' id='" + i + "'></a></font><iframe width='98%' id='" + i + "' data='"+dataurl+"' style='display:none'></iframe></div>");

						//$("#img[id="+i+"]").click(function () {$(this).append("Hello")});
						i = i + 1;
					}
					//$('#previewimg img').click(function(){window.location=$(this).attr('jnlp')});
				}
			}

			function imgloaded(i) {
				// When image preview option is selected.
				$('i').attr('id',i).hide();
				imgloaded.loaded = imgloaded.loaded + 1;
				$('#status').text(imgloaded.loaded + ' of ' + imgloaded.Ndays + ' images loaded ');
				if (imgloaded.loaded = imgloaded.Ndays) {
					$('#status').text('');
				}
			}

			function imgclicked(i) {
				// Open image in new tab when clicked.
				window.location = $("a[id="+i+"]").attr('href');
			}

			function tests(i) {
				// Use for testing random?
				function autoselect(el,N) {
					$(el+"list").click();
					if (arguments.length < 2)
						N = 1;
					for (i = 0; i < N;i++) {
						$(el).simulate("keydown", { keyCode: $.ui.keyCode.DOWN });
					}
					$(el).simulate("keydown", { keyCode: $.ui.keyCode.ENTER });
				}
				$("#demo").click(function () {
					autoselect("#catalog",1);
					autoselect("#dataset");
					autoselect("#start");
					autoselect("#stop");
					autoselect("#parameters");
				})

				var list = new Array();
				list[0] = {label:"SSCWeb",value:"sscweb",url:"catalog=sscweb&dataset=ace&parameters=X_GEI&start=1997-08-26&stop=1997-09-05"};
				list[1] = {label:"CDAWeb",value:"cdaweb",url:"catalog=cdaweb&dataset=A1_K0_MPA&parameters=dens_lop&start=2001-08-31&stop=2001-09-10"};
				list[2] = {label:"SuperMAG",value:"supermag",url:"catalog=supermag&dataset=BLC&parameters=N&start=-PT3D&stop=1980-01-10"};
				list[3] = {label:"SPIDR",value:"spidr",url:"catalog=spidr&dataset=amie_ae&parameters=amie_ae&version=0&start=1991-01-01&stop=1991-01-11"};
				list[4] = {label:"USGS 1-minute",value:"usgs1m",url:"catalog=USGS/RT/PT1M&dataset=BRW&parameters=H&start=2013-05-02&stop=2013-05-05"};
				list[5] = {label:"USGS 1-second",value:"usgs1s",url:"catalog=USGS/RT/PT1S&dataset=BRW&parameters=H&start=2013-05-02&stop=2013-05-05"};
				list[6] = {label:"SWPC AK/2DayFile",value:"SWPC AK/2DayFile",url:"catalog=SWPC/AK/2DayFile&dataset=AK&parameters=BoulderK&start=-PT2D&stop=PT0D&format=0"};
				list[7] = {label:"SWPC AK",value:"SWPC AK",url:"catalog=SWPC/AK&dataset=AK&parameters=BoulderK&start=-PT5D&stop=-PT2D&format=0"};
				list[8] = {label:"Linkcheck",value:"Linkcheck",url:"catalog=Autoplot/Linkcheck&dataset=1&parameters=ResponseTime&start=2012-12-07&stop=2012-12-09"};

				//list[6] = {label:"ISIS-2",value:"ISIS-2",url:"catalog=NSSDC/ISIS-2&dataset=CEP&parameters=L_value&start=1971-04-14&stop=1971-04-16"};
				//list[7] = {label:"TSX-5",value:"TSX-5",url:"catalog=ViRBO/TSX-5/EPHX&dataset=ephx&parameters=PitchAngle&start=2000-08-15&stop=2000-08-17"};
				//				list[5] = {label:"ISIS-1",value:"ISIS-1",url:"catalog=NSSDC/ISIS-1&dataset=CEP&start=1969-01-30&stop=1969-02-19&parameters=Altitude"};

				
				tests.onselect = function () {
					console.log('test selected');
					vid = $("#dropdownstest0").attr('value');
					console.log(vid);
					var k = 0;
					while (true) {
						if (list[k].value === vid) {break} else {k = k+1}
					}
					location.hash = list[k].url;
					preview();
					triggerselect();

				};
				
				//location.search = $.query.set("catalog","SSCWeb").toString();
				
				return list;
			}

		</script>
		
	</head>

	<body>	 		

		<div style="float:left;width:12em;margin-right:14px;margin-top:0em;">
			<a style="text-decoration:underline;cursor:pointer" id="cachecheckboxeslink">
				Options
			</a>
			<div id="cachecheckboxes" style="display:none">
				<font size="-1">		
					<div title="Show preview images (1 day of data per image) of data over default time range when a parameter is selected."><input id="previewimgcheckbox" type="checkbox" value=""/>&nbsp;Show preview plots</div>
					<div title="For fastest response time, use cached data (if available).  Disable this for data that change frequently."><input id="usedatacache" type="checkbox" value=""/>&nbsp;Use cached data</div>
					<div title="For fastest response time, use cached metadata (if available).  Disable this for metadata that change frequently."><input id="usemetadatacache" type="checkbox" value=""/>&nbsp;Use cached metadata</div>
					<div title="For fastest response time, use cached images (if available).  Disable this for data that change frequently.  Image cache is not used if cached data option is not selected."><input id="useimagecache" type="checkbox" value=""/>&nbsp;Use cached images</div>
				</font>
			</div>
			<span id="dropdowns0" class="dropdown"></span>
			<span id="dropdowns1" class="dropdown" style="display:none"></span>
			<span id="dropdowns2" class="dropdown" style="display:none"></span>
			<span id="dropdowns3" class="dropdown" style="display:none"></span>
			<span id="dropdowns4" class="dropdown" style="display:none"></span>
			<span id="dropdowns5" class="dropdown" style="display:none"></span>
			<span id="dropdowns6" class="dropdown" style="display:none"></span>
			<span id="dropdowns7" class="dropdown" style="display:none"></span>
			<span id="dropdowns8" class="dropdown" style="display:none"></span>
			<button type="button" title="re-set drop-downs" style="background-color:white;color:black;border:1px solid black;" onclick="window.location=window.location.pathname">
				Clear
			</button>
		</div>

		<div style="text-align:left;top:0;left:14em;">
			<font size="-1">
				<span id="status" style="background-color:yellow;text-align:center"></span>
			</font>
		</div>

		<div id="overviewdiv" style="margin-left:14em;margin-top:0em">
			<p>
				<br/>
				<b>Overview:</b>
				<ul>
					<li>Build a <a href="http://tsds.org/tsdsfe">TSDS Front End (TSDSFE)</a> URL for downloading data, plots, and download scripts.</li>
					<li>Begin by selecting a catalog.</li>
				</ul>
				<div style="margin-left:2.5em;margin-top:-1em;width:10em;" >
					<span id="dropdownstest0"></span>
				</div>
			</p>
		</div>
		<br/>
	
		<div id="infodiv" style="margin-left:14em;;margin-top:0em;">		
			<div id="scriptdiv" style="background-color:white;display:none;">
				<iframe id="dlframe" style="width:95%;height:20em;"></iframe>
			</div>
			<div id="imagediv" style="background-color:white;width:100%;height:100%;display:none;">
				<div><a target="_blank">Direct link</a>&nbsp;&nbsp;<img id="imageloading" style="height:.7em;" src="css/ajax-loader.gif"/></div>
				<img id="image"></img>
			</div>
			<div id="gallerydiv" style="height:100%;display:none;background-color:white;align:left">
				<div><a target="_blank">Direct link</a></div>
				<iframe style="width:95%;height:600px;"></iframe>
			</div>
			<div id="datadiv" style="display:none;background-color:white;align:left">
					<div><a target="_blank">Direct link</a></div>
					<iframe style="width:95%;height:100%;"></iframe>
			</div>
			<div id="styleinfoimage" style="display:none;width:95%">
				<b>Style options</b> (Background/Text/Symbol):
				<ul>
					<li>Custom - Show drop-downs for plot style.</li>
					<li>0 - None/Black/Blue (default)</li>
					<li>1 - Black/Yellow/Yellow</li>
					<li>2 - Spark Line</li>
				</ul>
			</div>			
			<div id="typeinfoimage" style="display:none;width:95%">
				<b>Image type options:</b>
				<ul>
					<li>Time Series (default)</li>
					<li>Histogram</li>
					<li>Autocorrelation</li>
					<li>Periodogram</li>
					<li>Spectrogram</li>
				</ul>
			</div>			
			<div id="formatinfodata" style="display:none;width:95%">
				<b>Format options:</b>
				<ul>
					<li>0: Native (if original was ASCII, otherwise same as option 1)</li>
					<li>1: Space-separated values with <a href="http://www.w3.org/TR/NOTE-datetime">ISO8601</a> timestamps (e.g., <code>2000&#8209;01&#8209;01T00:00:00.0&nbsp;1.1&nbsp;9.0)</code></li>
					<li>2: Space-separated values with Year Month Day Hour Minute Seconds timestamps</li>
				</ul>
			</div>			
			<div id="formatinfoimage" style="display:none;width:95%">
				<b>Format options:</b>
				<ul>
					<li>PNG - A PNG image with data over selected time range</li>
					<li>PDF - A PDF file with data over selected time range</li>
					<li>SVG - A SVG file with data over selected time range</li>
					<li>JNLP - A JNLP file that downloads and installs Autoplot with data in selected time range.</li>
					<li>Gallery - A gallery of PNG images of data over selected time range (one day of data per image)</li>
				</ul>
			</div>			
			<div id="formatinfoscript" style="display:none;width:95%">
				<b>Format options:</b>
				<ul>
					<li>IDL (script) - A script that when executed in IDL, creates a data array <code>D</code> and label array <code>L</code>.</li>
					<li>MATLAB (script) - A script that when executed in MATLAB, creates a data array <code>D</code> and label array <code>L</code>.</li>
				</ul>
			</div>			
			<div id="returninfo" style="display:none;width:95%">
				<b>Return options:</b>
				<ul>
					<li>Data - Data over selected time range</li>
					<li>Image - <a href="http://autoplot.org/">Autoplot</a> graphic or <a href="http://viviz.org/">ViViz</a> gallery of data over selected time range</li>
					<li>Script - A script that reads data into memory for various programing languages</li>
				</ul>
			</div>			
			<div id="parameterinfo" style="display:none;width:95%"></div>
			<div id="citeinfo" style="display:none;width:95%"></div>
			<div id="datasetinfo" style="display:none;width:95%"></div>
			<div id="cataloginfo" style="display:none;width:95%"></div>
			<div id="statusinfo" style="display:none;width:95%">
				<b>Note:</b>
				<ul>
				</ul>
			</div>
		</div>

		<div id="debugdiv" style="margin-left:14em;background-color:white;width:100%;height:100%;display:none;">
			<div><b>Debug info</b></div>
			<iframe id="debugframe" style="width:95%;height:100%;"></iframe>
		</div>
		<div id="previewimgdiv" style="margin-left:14em;display:none;">
			<div><b>Preview plots:</b></div>
			<div id="previewimg" style="width:95%;border: 3px solid black;overflow: auto">
				<img src=""></img>
			</div> 
		</div>

	</body>
	
</html>

